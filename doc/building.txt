BUILDING
========
The build system is make-based, and is relatively straight-forward. You must have a copy of
the appropriate toolchain for the target system (such as x86_64-pc-elf-, or riscv-unknown-elf-,
etc). See below.

Building is based around projects. These are self-contained configurations and builds that the
build system uses to make decisions. Existing projects are in projects/, and there are several
pre-configured ones. If you wish, you may add your own. Each project contains, when clean, just
a config.mk file specifying all of the configuration for that project.

When you execute make to build the kernel, you must specify a project to use in the PROJECT
variable, like so: `make PROJECT=riscv`. A project can be tested via the 'test' target like so:
`make PROJECT=riscv test`.

Toolchains
----------
The toolchain for the target system must be built in order to compile the kernel and userspace
programs. Fortunately, I have provided a _totally tested_ script to build them:

TARGET=x86_64-pc-elf PREFIX=/opt/toolchains/twz-x86_64 ./tools/toolchain.sh

Once you have a particular toolchain extracted to say, /opt/toolchains/riscv64, you will need to
update the project file to include that path. For the project that needs the toolchain, say
for the above example, projects/riscv, edit projects/<projectname>/config.mk and set the TOOLCHAIN_PATH
variable to point to where you extracted the toolchain (/opt/toolchains/riscv64 in the above example).
These config.mk files are set to not be tracked in git, so changes you make are entirely local to
your setup.
