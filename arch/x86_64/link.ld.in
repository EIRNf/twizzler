ENTRY(_start)
OUTPUT_FORMAT("elf64-x86-64")
SECTIONS
{
	. = %KERNEL_VIRTUAL_BASE% + %KERNEL_LOAD_OFFSET%;
	. += SIZEOF_HEADERS;
	kernel_start = .;
	.text : AT(%KERNEL_PHYSICAL_BASE% + %KERNEL_LOAD_OFFSET%) ALIGN(0x1000)
	{
		*(.boot)
		*(.text*)
	}

	.ctors : ALIGN(4) {
    	KEEP (*crtbegin.o(.ctors))
    	KEEP (*crtbegin?.o(.ctors))
    	/* We don't want to include the .ctor section from
       	   the crtend.o file until after the sorted ctors.
       	   The .ctor section from the crtend file contains the
       	   end of ctors marker and it must be last */
    	KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .ctors))
    	KEEP (*(SORT(.ctors.*)))
    	KEEP (*(.ctors))
    }
  	.dtors : ALIGN(4) {
    	KEEP (*crtbegin.o(.dtors))
    	KEEP (*crtbegin?.o(.dtors))
    	KEEP (*(EXCLUDE_FILE (*crtend.o *crtend?.o ) .dtors))
    	KEEP (*(SORT(.dtors.*)))
    	KEEP (*(.dtors))
  	}

	.init : {*(.init)}
	.fini : {*(.fini)}

	.data : ALIGN(0x1000) {
		kernel_data_start = .;
		*(.data*)
	}
	.rodata : ALIGN(0x1000) {
		*(.rodata*)
		*(.ksyms*)
	}
	kernel_data_end = .;
	.bss : ALIGN(0x1000) {
		kernel_bss_start = .;
		*(COMMON)
		*(.bss*)
	}
	kernel_bss_end = .;


	.extra :
	{
	   	*(.gnu.linkonce.t*)
	   	*(.gnu.linkonce.r*)
	   	. = ALIGN(4096);
	}

	. = ALIGN(8);
	kernel_end = .;

	/DISCARD/ : { *(.comment .note) }
}

